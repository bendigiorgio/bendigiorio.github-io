/// <reference types="jest" />
import type { Tolgee } from '@tolgee/core';
import type { Subscription } from '@tolgee/core/lib/services/Subscription';
export declare const mockTolgee: () => {
    runMock: any;
    stopMock: jest.Mock<any, any>;
    instantMock: jest.Mock<string, unknown[] | [props: import("@tolgee/core").InstantPropsTags<unknown>]>;
    translateMock: jest.Mock<Promise<string>, unknown[] | [key: string, params?: import("@tolgee/core").TranslationParamsTags<unknown>, noWrap?: boolean, defaultValue?: string]>;
    onTranslationChangeMock: {
        subscribe: jest.Mock<Subscription, [callback: any]>;
    };
    onLangChangeMock: {
        subscribe: jest.Mock<Subscription, [callback: any]>;
    };
    subscriptionCallbacks: {
        onTranslationChange: any;
        onLangChange: any;
    };
    onTranslationChangeUnsubscribeMock: jest.Mock<any, any>;
    onLangChangeUnsubscribeMock: jest.Mock<any, any>;
    getLangMock: jest.Mock<string, []>;
    setLangMock: jest.Mock<any, any>;
    changeTranslationValue: (value: string) => void;
    tolgeeClass: jest.Mock<any, any>;
    tolgee: Partial<Tolgee>;
};
