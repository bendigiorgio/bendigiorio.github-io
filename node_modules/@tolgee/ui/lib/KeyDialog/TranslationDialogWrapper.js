import React from 'react';
import Dialog from '@mui/material/Dialog';
import { useDialogContext, useDialogDispatch, } from './TranslationDialogContextProvider';
import { NewWindow } from './NewWindow';
import { DEVTOOLS_Z_INDEX } from '../constants';
export var TranslationDialogWrapper = function (_a) {
    var children = _a.children;
    var dispatch = useDialogDispatch();
    var useBrowserWindow = useDialogContext(function (c) { return c.useBrowserWindow; });
    var open = useDialogContext(function (c) { return c.open; });
    var takingScreenshot = useDialogContext(function (c) { return c.takingScreenshot; });
    var onClose = function () {
        dispatch({ type: 'ON_CLOSE' });
    };
    return (React.createElement(React.Fragment, null, useBrowserWindow ? (React.createElement(NewWindow, null, children)) : (!takingScreenshot && (React.createElement(Dialog, { disableRestoreFocus: true, disablePortal: true, disableEnforceFocus: true, open: open, onClose: onClose, "aria-labelledby": "form-dialog-title", maxWidth: "lg", style: { zIndex: DEVTOOLS_Z_INDEX } },
        React.createElement(React.Fragment, null, children))))));
};
//# sourceMappingURL=TranslationDialogWrapper.js.map