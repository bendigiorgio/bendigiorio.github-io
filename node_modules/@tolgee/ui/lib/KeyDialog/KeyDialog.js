var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { BodyEnd } from '../common/BodyEnd';
import { DialogProvider } from './TranslationDialogContextProvider';
import { TranslationDialog } from './TranslationDialog';
var KeyDialog = /** @class */ (function (_super) {
    __extends(KeyDialog, _super);
    function KeyDialog(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            key: null,
            defaultValue: undefined,
            dialogOpened: false,
        };
        _this.render = function () { return (React.createElement(React.Fragment, null,
            React.createElement(BodyEnd, null,
                React.createElement(DialogProvider, { dependencies: _this.props.dependencies, defaultValue: _this.state.defaultValue, open: _this.state.dialogOpened, input: _this.state.key, onClose: _this.onClose },
                    React.createElement(TranslationDialog, null))))); };
        _this.onClose = function () {
            _this.setState(__assign(__assign({}, _this.state), { dialogOpened: false }));
        };
        return _this;
    }
    KeyDialog.prototype.translationEdit = function (key, defaultValue) {
        this.setState(__assign(__assign({}, this.state), { dialogOpened: true, defaultValue: defaultValue, key: key }));
    };
    return KeyDialog;
}(React.Component));
export { KeyDialog };
//# sourceMappingURL=KeyDialog.js.map