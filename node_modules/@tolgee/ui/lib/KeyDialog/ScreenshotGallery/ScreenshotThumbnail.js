var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
import React, { useState } from 'react';
import Tooltip from '@mui/material/Tooltip';
import IconButton from '@mui/material/IconButton';
import { styled } from '@mui/material/styles';
import Clear from '@mui/icons-material/Clear';
import clsx from 'clsx';
import { DEVTOOLS_Z_INDEX } from '../../constants';
var Screenshot = styled('img')(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  z-index: 1;\n  transition: transform 0.1s, filter 0.5s;\n  &:hover {\n    transform: scale(1.1);\n  }\n"], ["\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  z-index: 1;\n  transition: transform 0.1s, filter 0.5s;\n  &:hover {\n    transform: scale(1.1);\n  }\n"])));
var ScreenshotBox = styled('div')(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  border: 1px solid ", ";\n  position: relative;\n  box-sizing: border-box;\n  width: 98px;\n  height: 98px;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  margin: 1px;\n  cursor: pointer;\n  overflow: visible;\n"], ["\n  border: 1px solid ", ";\n  position: relative;\n  box-sizing: border-box;\n  width: 98px;\n  height: 98px;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  margin: 1px;\n  cursor: pointer;\n  overflow: visible;\n"])), function (_a) {
    var theme = _a.theme;
    return theme.palette.grey[300];
});
var ScreenshotOverflowWrapper = styled('div')(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n"], ["\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n"])));
var DeleteIconButton = styled(IconButton)(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  position: absolute;\n  z-index: 2;\n  font-size: 20px;\n  right: -8px;\n  top: -8px;\n  padding: 2px;\n  background-color: rgba(62, 62, 62, 0.9);\n  color: rgba(255, 255, 255, 0.8);\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.1s linear, opacity 0.1s linear;\n  &:hover {\n    background-color: rgba(62, 62, 62, 1);\n    color: rgba(255, 255, 255, 0.9);\n  }\n  &.hover {\n    opacity: 1;\n    visibility: visible;\n  }\n"], ["\n  position: absolute;\n  z-index: 2;\n  font-size: 20px;\n  right: -8px;\n  top: -8px;\n  padding: 2px;\n  background-color: rgba(62, 62, 62, 0.9);\n  color: rgba(255, 255, 255, 0.8);\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.1s linear, opacity 0.1s linear;\n  &:hover {\n    background-color: rgba(62, 62, 62, 1);\n    color: rgba(255, 255, 255, 0.9);\n  }\n  &.hover {\n    opacity: 1;\n    visibility: visible;\n  }\n"])));
var DeleteIcon = styled(Clear)(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  font-size: 20px;\n"], ["\n  font-size: 20px;\n"])));
export var ScreenshotThumbnail = function (props) {
    var _a = __read(useState(false), 2), hover = _a[0], setHover = _a[1];
    var onMouseOver = function () {
        setHover(true);
    };
    var onMouseOut = function () {
        setHover(false);
    };
    var onDeleteClick = function () {
        props.onDelete(props.data.id);
    };
    return (React.createElement(ScreenshotBox, { onMouseOver: onMouseOver, onMouseOut: onMouseOut },
        props.onDelete && (React.createElement(Tooltip, { title: "Delete", PopperProps: {
                disablePortal: true,
                style: { zIndex: DEVTOOLS_Z_INDEX },
            } },
            React.createElement(DeleteIconButton, { onClick: onDeleteClick, className: clsx({ hover: hover }) },
                React.createElement(DeleteIcon, null)))),
        React.createElement(ScreenshotOverflowWrapper, { key: props.data.id, onClick: props.onClick },
            React.createElement(Screenshot, { onMouseDown: function (e) { return e.preventDefault(); }, src: props.data.fileUrl, "aria-label": "Screenshot" }))));
};
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
//# sourceMappingURL=ScreenshotThumbnail.js.map