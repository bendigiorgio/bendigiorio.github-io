import { Properties } from '../Properties';
import { ArgumentTypes } from '../helpers/commonTypes';
declare type FetchArgumentTypes = ArgumentTypes<typeof fetch>;
declare type Tail<T extends any[]> = ((...args: T) => any) extends (_: infer First, ...rest: infer Rest) => any ? T extends any[] ? Rest : ReadonlyArray<Rest[number]> : [];
export declare class ApiHttpService {
    private properties;
    constructor(properties: Properties);
    private static handleErrors;
    fetch(...args: ArgumentTypes<typeof fetch>): Promise<Response>;
    fetchJson(...args: ArgumentTypes<typeof fetch>): Promise<any>;
    post(url: any, body: any, init?: FetchArgumentTypes[1], ...rest: Tail<Tail<FetchArgumentTypes>>): Promise<Response>;
    postJson(url: any, body: any, init?: FetchArgumentTypes[1], ...rest: Tail<Tail<FetchArgumentTypes>>): Promise<any>;
    private getUrl;
}
export {};
