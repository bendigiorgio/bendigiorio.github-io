import { Properties } from '../../Properties';
import { ElementRegistrar } from '../../services/ElementRegistrar';
import { TranslationParams } from '../../types';
import { AbstractWrapper } from '../AbstractWrapper';
export declare class InvisibleWrapper implements AbstractWrapper {
    private coder;
    private coreHandler;
    private attributeHandler;
    private wrappedHandler;
    private textHandler;
    private nodeHandler;
    constructor(properties: Properties, elementRegistrar: ElementRegistrar);
    handleText(node: Element): Promise<void>;
    handleSubtree(node: Element): Promise<void>;
    handleAttribute(node: Element): Promise<void>;
    wrap(key: string, params?: TranslationParams, defaultValue?: string | undefined, translation?: string): import("../../types").TranslationTags<any>;
    unwrap(text: string): import("../../types").Unwrapped;
}
