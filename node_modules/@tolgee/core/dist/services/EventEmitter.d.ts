import { Subscription } from './Subscription';
export declare type CallbackType<T> = (data: T) => Promise<void> | void;
export interface EventEmitter<T> {
    subscribe(callback: CallbackType<T>): Subscription;
}
export declare class EventEmitterImpl<T> {
    private idCounter;
    private _subscriptions;
    private get subscriptions();
    emit(data?: T): Promise<void> | void;
    subscribe(callback: CallbackType<T>): Subscription;
    private unsubscribe;
}
