import { TolgeeConfig } from '../TolgeeConfig';
import { Properties } from '../Properties';
import { CoreService } from '../services/CoreService';
import { Observer } from '../Observer';
import { TranslationService } from '../services/TranslationService';
import { TextService } from '../services/TextService';
import { EventService } from '../services/EventService';
import { EventEmitterImpl } from '../services/EventEmitter';
import { ContentHandler } from '../wrappers/text/ContentHandler';
export declare const configMock: import("jest-mock").MockedObject<typeof TolgeeConfig>;
export declare const propertiesMock: import("jest-mock").MockedObject<typeof Properties>;
export declare const coreServiceMock: import("jest-mock").MockedObject<typeof CoreService>;
export declare const observerMock: import("jest-mock").MockedObject<typeof Observer>;
export declare const translationServiceMock: import("jest-mock").MockedObject<typeof TranslationService>;
export declare const textServiceMock: import("jest-mock").MockedObject<typeof TextService>;
export declare const eventServiceMock: import("jest-mock").MockedObject<typeof EventService>;
export declare const eventEmitterMock: import("jest-mock").MockedObject<typeof EventEmitterImpl>;
export declare const tolgeeConfigMock: import("jest-mock").MockedObject<typeof TolgeeConfig>;
export declare const textHandlerMock: import("jest-mock").MockedObject<typeof ContentHandler>;
export declare const getMockedInstance: <T>(constructor: new (...args: any[]) => T) => T;
