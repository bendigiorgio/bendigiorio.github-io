import { ArgumentTypes } from './commonTypes';
export declare class NodeHelper {
    static evaluate<T extends Node>(...args: ArgumentTypes<typeof NodeHelper.evaluateGenerator>): T[];
    static evaluateToSingle<T extends Node>(...args: ArgumentTypes<typeof NodeHelper.evaluateGenerator>): T;
    static closestElement(node: Element | Text): Element;
    static getParentElement(node: Node): Element | undefined;
    static isElementTargetElement(element: Element): boolean;
    static markElementAsTargetElement(element: Element): void;
    static unmarkElementAsTargetElement(element: Element): void;
    static nodeContains(descendant: Node, node: Node): boolean;
    private static evaluateGenerator;
    static getNodeText(node: Node): string;
    static setNodeText(node: Node, text: string): void;
}
